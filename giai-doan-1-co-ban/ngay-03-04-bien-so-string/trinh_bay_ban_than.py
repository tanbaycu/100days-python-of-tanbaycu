# trinh_bay_ban_than.py - Gi·ªõi thi·ªáu b·∫£n th√¢n ƒë·ªãnh d·∫°ng ƒë·∫πp
# File c·∫ßn n·ªôp cho ng√†y 3-4

import datetime

print("CH∆Ø∆†NG TR√åNH GI·ªöI THI·ªÜU B·∫¢N TH√ÇN")
print("=" * 50)

# Th√¥ng tin c√° nh√¢n
ho_ten = "Nguyen Van An"  # Thay b·∫±ng t√™n th·∫≠t
tuoi = 18
nam_sinh = 2005
que_quan = "Ha Noi"
truong = "THPT ABC"
lop = "12A1"
mon_yeu_thich = "Python Programming"
so_thich = "ƒê·ªçc s√°ch, nghe nh·∫°c, h·ªçc l·∫≠p tr√¨nh"
uoc_mo = "Tr·ªü th√†nh l·∫≠p tr√¨nh vi√™n Python"

# T√≠nh to√°n th√¥ng tin b·ªï sung
nam_hien_tai = datetime.datetime.now().year
thang_hien_tai = datetime.datetime.now().month
ngay_hien_tai = datetime.datetime.now().day

so_nam_song = nam_hien_tai - nam_sinh
so_thang_con_lai_den_sinh_nhat = 12 - thang_hien_tai if thang_hien_tai <= 12 else 0

# T·∫°o ASCII Art t√™n
def tao_ascii_art(ten):
    """T·∫°o ASCII art ƒë∆°n gi·∫£n cho t√™n"""
    lines = [
        "*" * (len(ten) + 6),
        "*  " + ten.upper() + "  *",
        "*" * (len(ten) + 6)
    ]
    return lines

ascii_art = tao_ascii_art(ho_ten)

# Header v·ªõi ASCII Art
print("\n" + "=" * 50)
for line in ascii_art:
    print(f"{line:^50}")
print("=" * 50)

# Ph·∫ßn 1: Th√¥ng tin c∆° b·∫£n
print("\nüìã TH√îNG TIN C∆† B·∫¢N")
print("-" * 30)
print(f"H·ªç v√† t√™n: {ho_ten}")
print(f"Tu·ªïi: {tuoi}")
print(f"NƒÉm sinh: {nam_sinh}")
print(f"Qu√™ qu√°n: {que_quan}")
print(f"Tr∆∞·ªùng: {truong}")
print(f"L·ªõp: {lop}")

# Ph·∫ßn 2: S·ªü th√≠ch v√† ƒëam m√™
print(f"\n‚ù§Ô∏è S·ªû TH√çCH V√Ä ƒêAM M√ä")
print("-" * 30)
print(f"M√¥n h·ªçc y√™u th√≠ch: {mon_yeu_thich}")
print(f"S·ªü th√≠ch: {so_thich}")
print(f"∆Ø·ªõc m∆°: {uoc_mo}")

# Ph·∫ßn 3: Th·ªëng k√™ th√∫ v·ªã
print(f"\nüìä TH·ªêNG K√ä TH√ö V·ªä")
print("-" * 30)

# Ph√¢n t√≠ch t√™n
cac_tu_ten = ho_ten.split()
so_tu_trong_ten = len(cac_tu_ten)
so_ky_tu_ten = len(ho_ten.replace(" ", ""))
chu_cai_dau = "".join([tu[0] for tu in cac_tu_ten])

print(f"S·ªë t·ª´ trong t√™n: {so_tu_trong_ten}")
print(f"S·ªë k√Ω t·ª± trong t√™n: {so_ky_tu_ten}")
print(f"Ch·ªØ c√°i ƒë·∫ßu: {chu_cai_dau}")

# Th·ªëng k√™ tu·ªïi
so_ngay_song_uoc_tinh = so_nam_song * 365
so_gio_song_uoc_tinh = so_ngay_song_uoc_tinh * 24

print(f"ƒê√£ s·ªëng kho·∫£ng: {so_ngay_song_uoc_tinh:,} ng√†y")
print(f"T∆∞∆°ng ƒë∆∞∆°ng: {so_gio_song_uoc_tinh:,} gi·ªù")

# Nh√≥m tu·ªïi
if tuoi < 13:
    nhom_tuoi = "Thi·∫øu nhi"
elif tuoi < 18:
    nhom_tuoi = "V·ªã th√†nh ni√™n"
elif tuoi < 25:
    nhom_tuoi = "Thanh ni√™n"
else:
    nhom_tuoi = "Tr∆∞·ªüng th√†nh"

print(f"Nh√≥m tu·ªïi: {nhom_tuoi}")

# Ph·∫ßn 4: H√†nh tr√¨nh h·ªçc Python
print(f"\nüêç H√ÄNH TR√åNH H·ªåC PYTHON")
print("-" * 30)

# Gi·∫£ l·∫≠p ti·∫øn ƒë·ªô h·ªçc
ngay_hoc = 4  # ƒêang h·ªçc ng√†y 3-4
tong_ngay = 100
phan_tram_hoan_thanh = (ngay_hoc / tong_ngay) * 100

print(f"Ng√†y h·ªçc hi·ªán t·∫°i: {ngay_hoc}/{tong_ngay}")
print(f"Ti·∫øn ƒë·ªô: {phan_tram_hoan_thanh:.1f}%")

# Thanh ti·∫øn ƒë·ªô ASCII
thanh_do_dai = 30
so_dau = int(thanh_do_dai * phan_tram_hoan_thanh / 100)
thanh_tien_do = "‚ñà" * so_dau + "‚ñë" * (thanh_do_dai - so_dau)
print(f"[{thanh_tien_do}] {phan_tram_hoan_thanh:.1f}%")

# K·ªπ nƒÉng ƒë√£ h·ªçc
ky_nang_da_hoc = [
    "Print v√† Input",
    "Bi·∫øn v√† ki·ªÉu d·ªØ li·ªáu",
    "Ph√©p to√°n s·ªë h·ªçc",
    "X·ª≠ l√Ω chu·ªói (String)",
    "Chuy·ªÉn ƒë·ªïi ki·ªÉu d·ªØ li·ªáu"
]

print(f"\nK·ªπ nƒÉng ƒë√£ h·ªçc ({len(ky_nang_da_hoc)} k·ªπ nƒÉng):")
for i, ky_nang in enumerate(ky_nang_da_hoc, 1):
    print(f"  {i}. {ky_nang}")

# Ph·∫ßn 5: M·ª•c ti√™u v√† k·∫ø ho·∫°ch
print(f"\nüéØ M·ª§C TI√äU V√Ä K·∫æ HO·∫†CH")
print("-" * 30)

muc_tieu_gan = [
    "Ho√†n th√†nh 100 ng√†y h·ªçc Python",
    "N·∫Øm v·ªØng c√°c kh√°i ni·ªám c∆° b·∫£n",
    "X√¢y d·ª±ng d·ª± √°n ƒë·∫ßu ti√™n",
    "Tham gia c·ªông ƒë·ªìng Python"
]

print("M·ª•c ti√™u g·∫ßn:")
for i, muc_tieu in enumerate(muc_tieu_gan, 1):
    print(f"  {i}. {muc_tieu}")

muc_tieu_xa = [
    "Tr·ªü th√†nh Python Developer",
    "H·ªçc Machine Learning",
    "ƒê√≥ng g√≥p cho Open Source",
    "T·∫°o ra s·∫£n ph·∫©m c√≥ √≠ch"
]

print(f"\nM·ª•c ti√™u xa:")
for i, muc_tieu in enumerate(muc_tieu_xa, 1):
    print(f"  {i}. {muc_tieu}")

# Ph·∫ßn 6: Th√¥ng ƒëi·ªáp c√° nh√¢n
print(f"\nüíå TH√îNG ƒêI·ªÜP C√Å NH√ÇN")
print("-" * 30)

thong_diep = f"""
Xin ch√†o! T√¥i l√† {ho_ten}, {tuoi} tu·ªïi.
T√¥i ƒëang h·ªçc l·∫≠p tr√¨nh Python v·ªõi m·ª•c ti√™u tr·ªü th√†nh 
m·ªôt l·∫≠p tr√¨nh vi√™n chuy√™n nghi·ªáp.

T√¥i tin r·∫±ng Python l√† ng√¥n ng·ªØ tuy·ªát v·ªùi ƒë·ªÉ b·∫Øt ƒë·∫ßu
h√†nh tr√¨nh l·∫≠p tr√¨nh. M·ªói ng√†y t√¥i h·ªçc ƒë∆∞·ª£c ƒëi·ªÅu m·ªõi
v√† c·∫£m th·∫•y h·ª©ng th√∫ h∆°n v·ªõi th·∫ø gi·ªõi c√¥ng ngh·ªá.

Motto c·ªßa t√¥i: "H·ªçc m·ªói ng√†y, ti·∫øn b·ªô m·ªói ng√†y!"
"""

print(thong_diep)

# Ph·∫ßn 7: Fun Facts
print(f"\nüéâ FUN FACTS V·ªÄ T√îI")
print("-" * 30)

fun_facts = [
    f"T√™n t√¥i c√≥ {so_ky_tu_ten} k√Ω t·ª±",
    f"T√¥i ƒë√£ s·ªëng ƒë∆∞·ª£c {so_nam_song} nƒÉm tr√™n ƒë·ªùi",
    f"Trong {tong_ngay} ng√†y h·ªçc Python, t√¥i ƒë√£ ho√†n th√†nh {ngay_hoc} ng√†y",
    f"M√¥n y√™u th√≠ch c·ªßa t√¥i c√≥ {len(mon_yeu_thich)} k√Ω t·ª±",
    f"∆Ø·ªõc m∆° c·ªßa t√¥i b·∫Øt ƒë·∫ßu b·∫±ng ch·ªØ '{uoc_mo[0]}'"
]

for i, fact in enumerate(fun_facts, 1):
    print(f"  {i}. {fact}")

# Ph·∫ßn 8: Contact & Social
print(f"\nüìû LI√äN H·ªÜ")
print("-" * 30)

# T·∫°o th√¥ng tin li√™n h·ªá gi·∫£ l·∫≠p
email_gia_lap = f"{ho_ten.lower().replace(' ', '.')}@email.com"
github_gia_lap = f"github.com/{ho_ten.lower().replace(' ', '')}"

print(f"Email: {email_gia_lap}")
print(f"GitHub: {github_gia_lap}")
print("Facebook: [C·∫≠p nh·∫≠t sau]")
print("LinkedIn: [C·∫≠p nh·∫≠t sau]")

# Footer
print(f"\n" + "=" * 50)
print("C·∫¢M ∆†N B·∫†N ƒê√É ƒê·ªåC GI·ªöI THI·ªÜU C·ª¶A T√îI!")
print(f"C·∫≠p nh·∫≠t l·∫ßn cu·ªëi: {ngay_hien_tai}/{thang_hien_tai}/{nam_hien_tai}")
print("H√£y c√πng nhau h·ªçc Python v√† ph√°t tri·ªÉn!")
print("=" * 50)

# Bonus: T·∫°o ch·ªØ k√Ω ASCII
chu_ky = f"""
    ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
    ‚ïë        {chu_cai_dau:<15} ‚ïë
    ‚ïë    Python Learner        ‚ïë
    ‚ïë      Day {ngay_hoc}/100           ‚ïë
    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
"""

print(chu_ky)

print("\nüéä Ch√∫c b·∫°n m·ªôt ng√†y h·ªçc Python vui v·∫ª! üéä") 