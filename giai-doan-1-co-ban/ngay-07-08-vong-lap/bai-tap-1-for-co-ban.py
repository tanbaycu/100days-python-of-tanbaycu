"""
B√ÄI T·∫¨P 1: V√íNG L·∫∂P FOR C·ªû B·∫¢N
=============================

B√†i t·∫≠p n√†y g·ªìm 12 ph·∫ßn t·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao v·ªÅ for loops.
M·ªói ph·∫ßn c√≥ v√≠ d·ª• minh h·ªça v√† b√†i t·∫≠p th·ª±c h√†nh.

Y√™u c·∫ßu:
- ƒê·ªçc k·ªπ t·ª´ng ph·∫ßn
- Ch·∫°y code v√≠ d·ª• ƒë·ªÉ hi·ªÉu
- L√†m b√†i t·∫≠p ·ªü cu·ªëi m·ªói ph·∫ßn
- Kh√¥ng x√≥a code v√≠ d·ª•, vi·∫øt b√†i t·∫≠p b√™n d∆∞·ªõi

Th·ªùi gian ∆∞·ªõc t√≠nh: 90-120 ph√∫t
"""

print("üéØ B√ÄI T·∫¨P 1: V√íNG L·∫∂P FOR C·ªû B·∫¢N")
print("=" * 50)

# =============================================================================
# PH·∫¶N A: FOR V·ªöI RANGE() C∆† B·∫¢N
# =============================================================================

print("\nüìñ PH·∫¶N A: FOR V·ªöI RANGE() C∆† B·∫¢N")
print("-" * 30)

# A.1. V√≠ d·ª•: range(n) - t·ª´ 0 ƒë·∫øn n-1
print("A.1. V√≠ d·ª• range(5):")
for i in range(5):
    print(f"S·ªë: {i}")

# A.2. V√≠ d·ª•: range(start, stop) 
print("\nA.2. V√≠ d·ª• range(3, 8):")
for i in range(3, 8):
    print(f"T·ª´ 3 ƒë·∫øn 7: {i}")

# A.3. V√≠ d·ª•: range(start, stop, step)
print("\nA.3. V√≠ d·ª• range(0, 10, 2):")
for i in range(0, 10, 2):
    print(f"S·ªë ch·∫µn: {i}")

# A.4. V√≠ d·ª•: range ng∆∞·ª£c
print("\nA.4. V√≠ d·ª• range(10, 0, -1):")
for i in range(10, 0, -1):
    print(f"ƒê·∫øm ng∆∞·ª£c: {i}")

print("\nüèÉ‚Äç‚ôÇÔ∏è B√ÄI T·∫¨P PH·∫¶N A:")
print("1. In c√°c s·ªë t·ª´ 1 ƒë·∫øn 15")
print("2. In c√°c s·ªë t·ª´ 20 ƒë·∫øn 30")
print("3. In c√°c s·ªë l·∫ª t·ª´ 1 ƒë·∫øn 20")
print("4. ƒê·∫øm ng∆∞·ª£c t·ª´ 50 v·ªÅ 40")
print("5. In c√°c s·ªë chia h·∫øt cho 5 t·ª´ 0 ƒë·∫øn 100")

# Vi·∫øt code b√†i t·∫≠p ·ªü ƒë√¢y:
print("\n--- B√ÄI L√ÄM PH·∫¶N A ---")

# B√†i 1: In c√°c s·ªë t·ª´ 1 ƒë·∫øn 15


# B√†i 2: In c√°c s·ªë t·ª´ 20 ƒë·∫øn 30


# B√†i 3: In c√°c s·ªë l·∫ª t·ª´ 1 ƒë·∫øn 20


# B√†i 4: ƒê·∫øm ng∆∞·ª£c t·ª´ 50 v·ªÅ 40


# B√†i 5: In c√°c s·ªë chia h·∫øt cho 5 t·ª´ 0 ƒë·∫øn 100


# =============================================================================
# PH·∫¶N B: FOR V·ªöI STRINGS
# =============================================================================

print("\nüìñ PH·∫¶N B: FOR V·ªöI STRINGS")
print("-" * 30)

# B.1. V√≠ d·ª•: L·∫∑p qua t·ª´ng k√Ω t·ª±
text = "Python"
print(f"B.1. L·∫∑p qua '{text}':")
for char in text:
    print(f"K√Ω t·ª±: '{char}'")

# B.2. V√≠ d·ª•: L·∫∑p v·ªõi index
word = "Hello"
print(f"\nB.2. L·∫∑p '{word}' v·ªõi index:")
for i in range(len(word)):
    print(f"Index {i}: '{word[i]}'")

# B.3. V√≠ d·ª•: Enumerate() 
greeting = "Hi"
print(f"\nB.3. Enumerate '{greeting}':")
for index, char in enumerate(greeting):
    print(f"V·ªã tr√≠ {index}: '{char}'")

# B.4. V√≠ d·ª•: ƒê·∫øm k√Ω t·ª± c·ª• th·ªÉ
sentence = "Hello World"
count_l = 0
print(f"\nB.4. ƒê·∫øm ch·ªØ 'l' trong '{sentence}':")
for char in sentence:
    if char.lower() == 'l':
        count_l += 1
        print(f"T√¨m th·∫•y 'l' t·∫°i: '{char}'")
print(f"T·ªïng s·ªë 'l': {count_l}")

print("\nüèÉ‚Äç‚ôÇÔ∏è B√ÄI T·∫¨P PH·∫¶N B:")
print("1. In t·ª´ng k√Ω t·ª± c·ªßa t√™n b·∫°n")
print("2. ƒê·∫øm s·ªë nguy√™n √¢m trong 'Education'")
print("3. In v·ªã tr√≠ c·ªßa t·∫•t c·∫£ ch·ªØ 'a' trong 'banana'")
print("4. Ki·ªÉm tra chu·ªói 'level' c√≥ ph·∫£i palindrome")
print("5. T·∫°o chu·ªói ng∆∞·ª£c c·ªßa 'Programming'")

# Vi·∫øt code b√†i t·∫≠p ·ªü ƒë√¢y:
print("\n--- B√ÄI L√ÄM PH·∫¶N B ---")

# B√†i 1: In t·ª´ng k√Ω t·ª± c·ªßa t√™n b·∫°n
my_name = "T√™n c·ªßa b·∫°n"  # Thay b·∫±ng t√™n th·∫≠t


# B√†i 2: ƒê·∫øm s·ªë nguy√™n √¢m trong 'Education'
word_education = "Education"
vowels = "aeiouAEIOU"


# B√†i 3: In v·ªã tr√≠ c·ªßa t·∫•t c·∫£ ch·ªØ 'a' trong 'banana'
banana_word = "banana"


# B√†i 4: Ki·ªÉm tra chu·ªói 'level' c√≥ ph·∫£i palindrome
check_word = "level"


# B√†i 5: T·∫°o chu·ªói ng∆∞·ª£c c·ªßa 'Programming'
programming_word = "Programming"


# =============================================================================
# PH·∫¶N C: FOR V·ªöI LISTS
# =============================================================================

print("\nüìñ PH·∫¶N C: FOR V·ªöI LISTS")
print("-" * 30)

# C.1. V√≠ d·ª•: L·∫∑p qua elements
fruits = ["apple", "banana", "orange", "grape"]
print("C.1. L·∫∑p qua danh s√°ch tr√°i c√¢y:")
for fruit in fruits:
    print(f"T√¥i th√≠ch {fruit}")

# C.2. V√≠ d·ª•: L·∫∑p v·ªõi index
colors = ["red", "green", "blue"]
print(f"\nC.2. L·∫∑p qua m√†u s·∫Øc v·ªõi index:")
for i in range(len(colors)):
    print(f"M√†u th·ª© {i+1}: {colors[i]}")

# C.3. V√≠ d·ª•: Enumerate v·ªõi list
numbers = [10, 20, 30]
print(f"\nC.3. Enumerate v·ªõi list s·ªë:")
for index, value in enumerate(numbers):
    print(f"Index {index}: Value {value}")

# C.4. V√≠ d·ª•: T√≠nh t·ªïng list
scores = [85, 92, 78, 96, 88]
total = 0
print(f"\nC.4. T√≠nh t·ªïng ƒëi·ªÉm {scores}:")
for score in scores:
    total += score
    print(f"C·ªông {score}, t·ªïng hi·ªán t·∫°i: {total}")
print(f"T·ªïng cu·ªëi c√πng: {total}")

print("\nüèÉ‚Äç‚ôÇÔ∏è B√ÄI T·∫¨P PH·∫¶N C:")
print("1. T√¨m s·ªë l·ªõn nh·∫•t trong [3, 7, 2, 9, 1, 8]")
print("2. ƒê·∫øm s·ªë ch·∫µn trong [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]")
print("3. T·∫°o list b√¨nh ph∆∞∆°ng c·ªßa [1, 2, 3, 4, 5]")
print("4. T√¨m t·∫•t c·∫£ t√™n c√≥ ƒë·ªô d√†i > 5 trong danh s√°ch")
print("5. T√≠nh trung b√¨nh c·ªßa [4.5, 3.2, 8.7, 6.1, 9.0]")

# Vi·∫øt code b√†i t·∫≠p ·ªü ƒë√¢y:
print("\n--- B√ÄI L√ÄM PH·∫¶N C ---")

# B√†i 1: T√¨m s·ªë l·ªõn nh·∫•t trong [3, 7, 2, 9, 1, 8]
numbers_list = [3, 7, 2, 9, 1, 8]


# B√†i 2: ƒê·∫øm s·ªë ch·∫µn trong [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
numbers_1_to_10 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]


# B√†i 3: T·∫°o list b√¨nh ph∆∞∆°ng c·ªßa [1, 2, 3, 4, 5]
original_numbers = [1, 2, 3, 4, 5]


# B√†i 4: T√¨m t√™n c√≥ ƒë·ªô d√†i > 5
names = ["An", "B√¨nh", "Christopher", "D≈©ng", "Elizabeth", "Phong"]


# B√†i 5: T√≠nh trung b√¨nh c·ªßa [4.5, 3.2, 8.7, 6.1, 9.0]
grades = [4.5, 3.2, 8.7, 6.1, 9.0]


# =============================================================================
# PH·∫¶N D: T√çNH TO√ÅN V·ªöI FOR
# =============================================================================

print("\nüìñ PH·∫¶N D: T√çNH TO√ÅN V·ªöI FOR")
print("-" * 30)

# D.1. V√≠ d·ª•: T√≠nh t·ªïng 1 ƒë·∫øn n
n = 10
total_sum = 0
print(f"D.1. T√≠nh t·ªïng t·ª´ 1 ƒë·∫øn {n}:")
for i in range(1, n + 1):
    total_sum += i
    print(f"i={i}, t·ªïng={total_sum}")
print(f"T·ªïng cu·ªëi c√πng: {total_sum}")

# D.2. V√≠ d·ª•: T√≠nh giai th·ª´a
factorial_n = 5
factorial = 1
print(f"\nD.2. T√≠nh {factorial_n}! (giai th·ª´a):")
for i in range(1, factorial_n + 1):
    factorial *= i
    print(f"i={i}, giai th·ª´a={factorial}")
print(f"{factorial_n}! = {factorial}")

# D.3. V√≠ d·ª•: L≈©y th·ª´a
base = 2
power = 4
result = 1
print(f"\nD.3. T√≠nh {base}^{power}:")
for i in range(power):
    result *= base
    print(f"L·∫ßn {i+1}: {result}")
print(f"{base}^{power} = {result}")

print("\nüèÉ‚Äç‚ôÇÔ∏è B√ÄI T·∫¨P PH·∫¶N D:")
print("1. T√≠nh t·ªïng c√°c s·ªë ch·∫µn t·ª´ 2 ƒë·∫øn 20")
print("2. T√≠nh 8! (8 giai th·ª´a)")  
print("3. T√≠nh 3^6 (3 m≈© 6)")
print("4. T√≠nh t·ªïng b√¨nh ph∆∞∆°ng t·ª´ 1^2 ƒë·∫øn 10^2")
print("5. T√¨m t·ªïng c√°c s·ªë chia h·∫øt cho 3 t·ª´ 1 ƒë·∫øn 30")

# Vi·∫øt code b√†i t·∫≠p ·ªü ƒë√¢y:
print("\n--- B√ÄI L√ÄM PH·∫¶N D ---")

# B√†i 1: T√≠nh t·ªïng c√°c s·ªë ch·∫µn t·ª´ 2 ƒë·∫øn 20


# B√†i 2: T√≠nh 8! (8 giai th·ª´a)


# B√†i 3: T√≠nh 3^6 (3 m≈© 6)


# B√†i 4: T√≠nh t·ªïng b√¨nh ph∆∞∆°ng t·ª´ 1^2 ƒë·∫øn 10^2


# B√†i 5: T√¨m t·ªïng c√°c s·ªë chia h·∫øt cho 3 t·ª´ 1 ƒë·∫øn 30


# =============================================================================
# PH·∫¶N E: PATTERNS V·ªöI FOR
# =============================================================================

print("\nüìñ PH·∫¶N E: PATTERNS V·ªöI FOR")
print("-" * 30)

# E.1. V√≠ d·ª•: Tam gi√°c sao
print("E.1. Tam gi√°c sao:")
for i in range(1, 6):
    print("*" * i)

# E.2. V√≠ d·ª•: Tam gi√°c s·ªë
print("\nE.2. Tam gi√°c s·ªë:")
for i in range(1, 6):
    for j in range(1, i + 1):
        print(j, end=" ")
    print()  # Xu·ªëng d√≤ng

# E.3. V√≠ d·ª•: Pattern ch·ªØ c√°i
print("\nE.3. Pattern ch·ªØ c√°i:")
for i in range(1, 5):
    for j in range(i):
        char = chr(ord('A') + j)  # A, B, C, D...
        print(char, end=" ")
    print()

print("\nüèÉ‚Äç‚ôÇÔ∏è B√ÄI T·∫¨P PH·∫¶N E:")
print("1. T·∫°o tam gi√°c sao ng∆∞·ª£c (5 d√≤ng gi·∫£m d·∫ßn)")
print("2. T·∫°o pattern s·ªë theo h√†ng (1, 22, 333, 4444)")
print("3. T·∫°o tam gi√°c vu√¥ng c√¢n b·∫±ng s·ªë")
print("4. In pattern ch·ªØ c√°i theo alphabet")

# Vi·∫øt code b√†i t·∫≠p ·ªü ƒë√¢y:
print("\n--- B√ÄI L√ÄM PH·∫¶N E ---")

# B√†i 1: Tam gi√°c sao ng∆∞·ª£c


# B√†i 2: Pattern s·ªë theo h√†ng


# B√†i 3: Tam gi√°c vu√¥ng c√¢n


# B√†i 4: Pattern ch·ªØ c√°i alphabet


# =============================================================================
# PH·∫¶N F: B√ÄI TO√ÅN TH·ª∞C T·∫æ
# =============================================================================

print("\nüìñ PH·∫¶N F: B√ÄI TO√ÅN TH·ª∞C T·∫æ")
print("-" * 30)

# F.1. V√≠ d·ª•: B·∫£ng c·ª≠u ch∆∞∆°ng
table_number = 7
print(f"F.1. B·∫£ng c·ª≠u ch∆∞∆°ng {table_number}:")
for i in range(1, 11):
    result = table_number * i
    print(f"{table_number} x {i:2} = {result:2}")

# F.2. V√≠ d·ª•: Ki·ªÉm tra s·ªë nguy√™n t·ªë
def is_prime_demo(num):
    if num < 2:
        return False
    
    print(f"F.2. Ki·ªÉm tra {num} c√≥ ph·∫£i s·ªë nguy√™n t·ªë:")
    for i in range(2, int(num**0.5) + 1):
        print(f"Ki·ªÉm tra {num} % {i} = {num % i}")
        if num % i == 0:
            print(f"{num} chia h·∫øt cho {i} ‚Üí Kh√¥ng ph·∫£i s·ªë nguy√™n t·ªë")
            return False
    print(f"{num} l√† s·ªë nguy√™n t·ªë!")
    return True

is_prime_demo(17)

# F.3. V√≠ d·ª•: T√¨m ∆∞·ªõc s·ªë
number = 12
print(f"\nF.3. T√¨m ∆∞·ªõc s·ªë c·ªßa {number}:")
divisors = []
for i in range(1, number + 1):
    if number % i == 0:
        divisors.append(i)
        print(f"{i} l√† ∆∞·ªõc s·ªë c·ªßa {number}")
print(f"C√°c ∆∞·ªõc s·ªë: {divisors}")

print("\nüèÉ‚Äç‚ôÇÔ∏è B√ÄI T·∫¨P PH·∫¶N F:")
print("1. In b·∫£ng c·ª≠u ch∆∞∆°ng c·ªßa s·ªë 9")
print("2. Ki·ªÉm tra 29 c√≥ ph·∫£i s·ªë nguy√™n t·ªë kh√¥ng")
print("3. T√¨m t·∫•t c·∫£ ∆∞·ªõc s·ªë c·ªßa 24")
print("4. T√≠nh t·ªïng c√°c ch·ªØ s·ªë c·ªßa 12345")
print("5. ƒê·∫øm s·ªë l·∫ßn xu·∫•t hi·ªán ch·ªØ s·ªë 3 trong 3333377")

# Vi·∫øt code b√†i t·∫≠p ·ªü ƒë√¢y:
print("\n--- B√ÄI L√ÄM PH·∫¶N F ---")

# B√†i 1: B·∫£ng c·ª≠u ch∆∞∆°ng s·ªë 9


# B√†i 2: Ki·ªÉm tra 29 c√≥ ph·∫£i s·ªë nguy√™n t·ªë


# B√†i 3: T√¨m ∆∞·ªõc s·ªë c·ªßa 24


# B√†i 4: T√≠nh t·ªïng ch·ªØ s·ªë c·ªßa 12345


# B√†i 5: ƒê·∫øm ch·ªØ s·ªë 3 trong 3333377


# =============================================================================
# T·ªîNG K·∫æT V√Ä ƒê√ÅNH GI√Å
# =============================================================================

print("\n" + "="*50)
print("üèÜ T·ªîNG K·∫æT B√ÄI T·∫¨P 1")
print("="*50)

print("""
KI·∫æN TH·ª®C ƒê√É H·ªåC:
‚úÖ range() v·ªõi 1, 2, 3 tham s·ªë
‚úÖ For loop v·ªõi strings
‚úÖ For loop v·ªõi lists  
‚úÖ T√≠nh to√°n v·ªõi for loops
‚úÖ T·∫°o patterns ƒë∆°n gi·∫£n
‚úÖ Gi·∫£i quy·∫øt b√†i to√°n th·ª±c t·∫ø

ƒêI·ªÇM ƒê√ÅNH GI√Å B·∫¢N TH√ÇN:
- Ph·∫ßn A (range c∆° b·∫£n): ___/5
- Ph·∫ßn B (strings): ___/5  
- Ph·∫ßn C (lists): ___/5
- Ph·∫ßn D (t√≠nh to√°n): ___/5
- Ph·∫ßn E (patterns): ___/4
- Ph·∫ßn F (th·ª±c t·∫ø): ___/5

T·ªîNG ƒêI·ªÇM: ___/29

CHU·∫®N ƒê√ÅNH GI√Å:
ü•á 25-29 ƒëi·ªÉm: Xu·∫•t s·∫Øc! 
ü•à 20-24 ƒëi·ªÉm: Gi·ªèi!
ü•â 15-19 ƒëi·ªÉm: Kh√°
üìö 10-14 ƒëi·ªÉm: C·∫ßn √¥n l·∫°i
üí™ <10 ƒëi·ªÉm: H·ªçc l·∫°i t·ª´ ƒë·∫ßu

GHI CH√ö C·∫¢M NH·∫¨N:
- Ph·∫ßn n√†o kh√≥ nh·∫•t? ________________
- Ph·∫ßn n√†o th√∫ v·ªã nh·∫•t? ______________  
- C·∫ßn c·∫£i thi·ªán g√¨? __________________
""")

print("üî• S·∫µn s√†ng cho B√†i T·∫≠p 2: While Loops!")

# =============================================================================
# BONUS: TH√ÅCH TH·ª®C N√ÇNG CAO (TU·ª≤ CH·ªåN)
# =============================================================================

print("\nüåü BONUS - TH√ÅCH TH·ª®C N√ÇNG CAO:")
print("Ch·ªâ l√†m n·∫øu b·∫°n ƒë√£ ho√†n th√†nh t·∫•t c·∫£ b√†i t·∫≠p tr√™n!")
print("-" * 50)

print("1. T·∫°o pattern kim c∆∞∆°ng sao (5 t·∫ßng)")
print("2. T√¨m t·∫•t c·∫£ s·ªë ho√†n h·∫£o t·ª´ 1 ƒë·∫øn 1000")  
print("3. In b·∫£ng ASCII t·ª´ A ƒë·∫øn Z")
print("4. T·∫°o password ng·∫´u nhi√™n 8 k√Ω t·ª±")
print("5. Vi·∫øt ch∆∞∆°ng tr√¨nh v·∫Ω h√¨nh ch·ªØ nh·∫≠t b·∫±ng sao")

# Bonus code ·ªü ƒë√¢y (n·∫øu mu·ªën th·ª≠ th√°ch):
print("\n--- BONUS CODE ---")

# Bonus 1: Kim c∆∞∆°ng sao


# Bonus 2: S·ªë ho√†n h·∫£o


# Bonus 3: B·∫£ng ASCII


# Bonus 4: Password generator


# Bonus 5: H√¨nh ch·ªØ nh·∫≠t sao


print("\nüéâ CH√öC M·ª™NG! B·∫†N ƒê√É HO√ÄN TH√ÄNH B√ÄI T·∫¨P 1!") 