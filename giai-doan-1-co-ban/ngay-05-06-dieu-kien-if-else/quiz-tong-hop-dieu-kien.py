# ===============================================
# NG√ÄY 5-6: QUIZ T∆Ø∆†NG T√ÅC V·ªÄ ƒêI·ªÄU KI·ªÜN IF/ELSE
# M·ª•c ti√™u: Ki·ªÉm tra ki·∫øn th·ª©c v·ªõi tr·∫£i nghi·ªám t∆∞∆°ng t√°c
# ===============================================

try:
    from colorama import init, Fore, Back, Style
    init()  # Kh·ªüi t·∫°o colorama
    COLORAMA_AVAILABLE = True
except ImportError:
    # N·∫øu kh√¥ng c√≥ colorama, t·∫°o c√°c h·∫±ng s·ªë r·ªóng
    COLORAMA_AVAILABLE = False
    class DummyColor:
        def __getattr__(self, name):
            return ""
    Fore = Back = Style = DummyColor()

import random
import time
import sys

# ===============================================
# H·ªÜTH·ªêNG QU·∫¢N L√ù QUIZ
# ===============================================

class QuizManager:
    def __init__(self):
        self.diem_so = 0
        self.tong_cau = 0
        self.dap_an_dung = []
        self.dap_an_sai = []
        self.thoi_gian_bat_dau = time.time()
        
    def hien_thi_header(self):
        if COLORAMA_AVAILABLE:
            print(Fore.CYAN + "=" * 60)
            print(Fore.YELLOW + "üéØ QUIZ T∆Ø∆†NG T√ÅC V·ªÄ ƒêI·ªÄU KI·ªÜN IF/ELSE üéØ")
            print(Fore.CYAN + "=" * 60 + Style.RESET_ALL)
        else:
            print("=" * 60)
            print("QUIZ TUONG TAC VE DIEU KIEN IF/ELSE")
            print("=" * 60)
        
        print("üìö Ki·ªÉm tra ki·∫øn th·ª©c t·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao!")
        print("‚è∞ Kh√¥ng gi·ªõi h·∫°n th·ªùi gian - t·∫≠p trung v√†o ch·∫•t l∆∞·ª£ng")
        print("üéÆ Tr·∫£i nghi·ªám t∆∞∆°ng t√°c t·ª´ng c√¢u h·ªèi")
        print()
    
    def hien_thi_tien_do(self):
        if COLORAMA_AVAILABLE:
            print(Fore.MAGENTA + f"üìä ƒêi·ªÉm hi·ªán t·∫°i: {self.diem_so}/{self.tong_cau}" + Style.RESET_ALL)
        else:
            print(f"Diem hien tai: {self.diem_so}/{self.tong_cau}")
        
        if self.tong_cau > 0:
            ty_le = (self.diem_so / self.tong_cau) * 100
            if ty_le >= 80:
                mau = Fore.GREEN if COLORAMA_AVAILABLE else ""
                bieu_tuong = "üåü"
            elif ty_le >= 60:
                mau = Fore.YELLOW if COLORAMA_AVAILABLE else ""
                bieu_tuong = "üëç"
            else:
                mau = Fore.RED if COLORAMA_AVAILABLE else ""
                bieu_tuong = "üí™"
            
            reset = Style.RESET_ALL if COLORAMA_AVAILABLE else ""
            print(f"{mau}üìà T·ª∑ l·ªá ƒë√∫ng: {ty_le:.1f}% {bieu_tuong}{reset}")
        print()
    
    def kiem_tra_dap_an(self, dap_an_user, dap_an_dung, giai_thich=""):
        self.tong_cau += 1
        
        if dap_an_user.upper() == dap_an_dung.upper():
            self.diem_so += 1
            self.dap_an_dung.append(self.tong_cau)
            
            if COLORAMA_AVAILABLE:
                print(Fore.GREEN + "‚úÖ ƒê√öNG! Tuy·ªát v·ªùi!" + Style.RESET_ALL)
            else:
                print("DUNG! Tuyet voi!")
            
            if giai_thich:
                if COLORAMA_AVAILABLE:
                    print(Fore.CYAN + f"üí° Gi·∫£i th√≠ch: {giai_thich}" + Style.RESET_ALL)
                else:
                    print(f"Giai thich: {giai_thich}")
        else:
            self.dap_an_sai.append(self.tong_cau)
            
            if COLORAMA_AVAILABLE:
                print(Fore.RED + f"‚ùå SAI! ƒê√°p √°n ƒë√∫ng l√†: {dap_an_dung}" + Style.RESET_ALL)
            else:
                print(f"SAI! Dap an dung la: {dap_an_dung}")
            
            if giai_thich:
                if COLORAMA_AVAILABLE:
                    print(Fore.YELLOW + f"üìñ Gi·∫£i th√≠ch: {giai_thich}" + Style.RESET_ALL)
                else:
                    print(f"Giai thich: {giai_thich}")
        
        print()
        time.sleep(1)  # Pause ng·∫Øn ƒë·ªÉ ƒë·ªçc feedback
    
    def hien_thi_ket_qua_cuoi(self):
        thoi_gian_lam_bai = int(time.time() - self.thoi_gian_bat_dau)
        phut = thoi_gian_lam_bai // 60
        giay = thoi_gian_lam_bai % 60
        
        if COLORAMA_AVAILABLE:
            print(Fore.CYAN + "=" * 60)
            print(Fore.YELLOW + "üèÜ K·∫æT QU·∫¢ CU·ªêI C√ôNG üèÜ")
            print(Fore.CYAN + "=" * 60 + Style.RESET_ALL)
        else:
            print("=" * 60)
            print("KET QUA CUOI CUNG")
            print("=" * 60)
        
        ty_le = (self.diem_so / self.tong_cau) * 100 if self.tong_cau > 0 else 0
        
        print(f"üìä T·ªïng c√¢u h·ªèi: {self.tong_cau}")
        print(f"‚úÖ Tr·∫£ l·ªùi ƒë√∫ng: {self.diem_so}")
        print(f"‚ùå Tr·∫£ l·ªùi sai: {self.tong_cau - self.diem_so}")
        print(f"‚è∞ Th·ªùi gian: {phut} ph√∫t {giay} gi√¢y")
        
        # X·∫øp lo·∫°i
        if ty_le >= 90:
            xep_loai = "XU·∫§T S·∫ÆC üåü"
            mau = Fore.GREEN if COLORAMA_AVAILABLE else ""
            nhan_xet = "B·∫°n ƒë√£ th√†nh th·∫°o if/else! S·∫µn s√†ng cho level ti·∫øp theo!"
        elif ty_le >= 80:
            xep_loai = "GI·ªéI üëè"
            mau = Fore.CYAN if COLORAMA_AVAILABLE else ""
            nhan_xet = "R·∫•t t·ªët! Ch·ªâ c·∫ßn √¥n l·∫°i m·ªôt v√†i ƒëi·ªÉm."
        elif ty_le >= 70:
            xep_loai = "KH√Å üëç"
            mau = Fore.YELLOW if COLORAMA_AVAILABLE else ""
            nhan_xet = "T·ªët! H√£y practice th√™m v·ªõi c√°c b√†i t·∫≠p kh√≥."
        elif ty_le >= 60:
            xep_loai = "TRUNG B√åNH üìö"
            mau = Fore.MAGENTA if COLORAMA_AVAILABLE else ""
            nhan_xet = "C·∫ßn √¥n l·∫°i l√Ω thuy·∫øt v√† l√†m th√™m b√†i t·∫≠p."
        else:
            xep_loai = "C·∫¶N C·ªê G·∫ÆNG üí™"
            mau = Fore.RED if COLORAMA_AVAILABLE else ""
            nhan_xet = "H√£y ƒë·ªçc l·∫°i l√Ω thuy·∫øt v√† practice t·ª´ ƒë·∫ßu."
        
        reset = Style.RESET_ALL if COLORAMA_AVAILABLE else ""
        print(f"{mau}üéØ T·ª∑ l·ªá ƒë√∫ng: {ty_le:.1f}%")
        print(f"üèÖ X·∫øp lo·∫°i: {xep_loai}{reset}")
        print(f"üí¨ Nh·∫≠n x√©t: {nhan_xet}")
        
        # G·ª£i √Ω c·∫£i thi·ªán
        if self.dap_an_sai:
            print(f"\nüìù C√°c c√¢u c·∫ßn √¥n l·∫°i: {', '.join(map(str, self.dap_an_sai))}")
            
        print("\nüöÄ Ti·∫øp t·ª•c h·ªçc t·∫≠p v√† coding!")
        print("=" * 60)

# ===============================================
# C√ÇU H·ªéI TR·∫ÆC NGHI·ªÜM
# ===============================================

def tao_danh_sach_cau_hoi():
    """T·∫°o danh s√°ch t·∫•t c·∫£ c√¢u h·ªèi tr·∫Øc nghi·ªám"""
    
    cau_hoi = [
        # PH·∫¶N C∆† B·∫¢N (10 c√¢u)
        {
            "id": 1,
            "phan": "C∆° b·∫£n",
            "noi_dung": "K·∫øt qu·∫£ c·ªßa ƒëo·∫°n code sau l√† g√¨?\nx = 5\nif x > 3:\n    print('A')\nelse:\n    print('B')",
            "lua_chon": {"A": "A", "B": "B", "C": "L·ªói", "D": "Kh√¥ng in g√¨"},
            "dap_an": "A",
            "giai_thich": "x = 5 > 3 n√™n ƒëi·ªÅu ki·ªán ƒë√∫ng, in 'A'"
        },
        {
            "id": 2,
            "phan": "C∆° b·∫£n", 
            "noi_dung": "C√∫ ph√°p n√†o ƒë√∫ng ƒë·ªÉ ki·ªÉm tra x b·∫±ng 10?",
            "lua_chon": {"A": "if x = 10:", "B": "if x == 10:", "C": "if x === 10:", "D": "if x is 10:"},
            "dap_an": "B",
            "giai_thich": "D√πng == ƒë·ªÉ so s√°nh, = ƒë·ªÉ g√°n gi√° tr·ªã"
        },
        {
            "id": 3,
            "phan": "C∆° b·∫£n",
            "noi_dung": "To√°n t·ª≠ n√†o d√πng ƒë·ªÉ ki·ªÉm tra 'kh√¥ng b·∫±ng'?",
            "lua_chon": {"A": "<>", "B": "!=", "C": "not=", "D": "!=="},
            "dap_an": "B", 
            "giai_thich": "!= l√† to√°n t·ª≠ 'kh√¥ng b·∫±ng' trong Python"
        },
        {
            "id": 4,
            "phan": "C∆° b·∫£n",
            "noi_dung": "K·∫øt qu·∫£ c·ªßa: 5 > 3 and 2 < 1",
            "lua_chon": {"A": "True", "B": "False", "C": "L·ªói", "D": "None"},
            "dap_an": "B",
            "giai_thich": "True and False = False (c·∫£ hai ph·∫£i ƒë√∫ng)"
        },
        {
            "id": 5,
            "phan": "C∆° b·∫£n",
            "noi_dung": "K·∫øt qu·∫£ c·ªßa: not True",
            "lua_chon": {"A": "True", "B": "False", "C": "1", "D": "0"},
            "dap_an": "B",
            "giai_thich": "not True = False"
        },
        {
            "id": 6,
            "phan": "C∆° b·∫£n",
            "noi_dung": "Trong Python, gi√° tr·ªã n√†o ƒë∆∞·ª£c coi l√† False?",
            "lua_chon": {"A": "0", "B": "''", "C": "[]", "D": "T·∫•t c·∫£ ƒë·ªÅu ƒë√∫ng"},
            "dap_an": "D",
            "giai_thich": "0, chu·ªói r·ªóng, list r·ªóng ƒë·ªÅu l√† False"
        },
        {
            "id": 7,
            "phan": "C∆° b·∫£n",
            "noi_dung": "K·∫øt qu·∫£ c·ªßa: 'Python' in ['Java', 'Python', 'C++']",
            "lua_chon": {"A": "True", "B": "False", "C": "L·ªói", "D": "1"},
            "dap_an": "A",
            "giai_thich": "'Python' c√≥ trong list n√™n tr·∫£ v·ªÅ True"
        },
        {
            "id": 8,
            "phan": "C∆° b·∫£n",
            "noi_dung": "Th·ª© t·ª± ∆∞u ti√™n c·ªßa to√°n t·ª≠ logic?",
            "lua_chon": {"A": "and > or > not", "B": "not > and > or", "C": "or > and > not", "D": "Kh√¥ng c√≥ th·ª© t·ª±"},
            "dap_an": "B",
            "giai_thich": "not c√≥ ∆∞u ti√™n cao nh·∫•t, sau ƒë√≥ and, cu·ªëi c√πng or"
        },
        {
            "id": 9,
            "phan": "C∆° b·∫£n",
            "noi_dung": "C√°ch vi·∫øt n√†o t∆∞∆°ng ƒë∆∞∆°ng v·ªõi: if not x == 5:",
            "lua_chon": {"A": "if x != 5:", "B": "if x <> 5:", "C": "if x not 5:", "D": "if x is not 5:"},
            "dap_an": "A",
            "giai_thich": "not x == 5 t∆∞∆°ng ƒë∆∞∆°ng x != 5"
        },
        {
            "id": 10,
            "phan": "C∆° b·∫£n",
            "noi_dung": "K·∫øt qu·∫£ c·ªßa: 10 % 3 == 1",
            "lua_chon": {"A": "True", "B": "False", "C": "1", "D": "3.33"},
            "dap_an": "A",
            "giai_thich": "10 chia 3 d∆∞ 1, n√™n 10 % 3 = 1"
        },
        
        # PH·∫¶N N√ÇNG CAO (10 c√¢u)
        {
            "id": 11,
            "phan": "N√¢ng cao",
            "noi_dung": "K·∫øt qu·∫£ c·ªßa ƒëo·∫°n code?\nx = 0\nif x:\n    print('A')\nelif not x:\n    print('B')\nelse:\n    print('C')",
            "lua_chon": {"A": "A", "B": "B", "C": "C", "D": "L·ªói"},
            "dap_an": "B",
            "giai_thich": "x = 0 l√† False, not 0 l√† True n√™n ch·∫°y elif"
        },
        {
            "id": 12,
            "phan": "N√¢ng cao",
            "noi_dung": "K·∫øt qu·∫£ c·ªßa: [] or [1, 2] or [3]",
            "lua_chon": {"A": "[]", "B": "[1, 2]", "C": "[3]", "D": "True"},
            "dap_an": "B",
            "giai_thich": "or tr·∫£ v·ªÅ gi√° tr·ªã ƒë·∫ßu ti√™n True, [] l√† False, [1,2] l√† True"
        },
        {
            "id": 13,
            "phan": "N√¢ng cao",
            "noi_dung": "ƒêo·∫°n code n√†o ki·ªÉm tra x trong kho·∫£ng 10-20?",
            "lua_chon": {"A": "if 10 < x < 20:", "B": "if x > 10 and x < 20:", "C": "if (x > 10) and (x < 20):", "D": "T·∫•t c·∫£ ƒë·ªÅu ƒë√∫ng"},
            "dap_an": "D",
            "giai_thich": "C·∫£ 3 c√°ch ƒë·ªÅu ƒë√∫ng, Python h·ªó tr·ª£ chained comparison"
        },
        {
            "id": 14,
            "phan": "N√¢ng cao",
            "noi_dung": "K·∫øt qu·∫£ c·ªßa: bool('False')",
            "lua_chon": {"A": "True", "B": "False", "C": "'False'", "D": "L·ªói"},
            "dap_an": "A",
            "giai_thich": "Chu·ªói kh√¥ng r·ªóng lu√¥n l√† True, k·ªÉ c·∫£ 'False'"
        },
        {
            "id": 15,
            "phan": "N√¢ng cao",
            "noi_dung": "ƒêo·∫°n code n√†o c√≥ th·ªÉ g√¢y l·ªói?",
            "lua_chon": {"A": "if True: pass", "B": "if 1/0 > 0: print('OK')", "C": "if False: print('Never')", "D": "if None: print('None')"},
            "dap_an": "B",
            "giai_thich": "1/0 g√¢y ZeroDivisionError"
        },
        {
            "id": 16,
            "phan": "N√¢ng cao",
            "noi_dung": "K·∫øt qu·∫£ c·ªßa: 'a' < 'b' < 'c'",
            "lua_chon": {"A": "True", "B": "False", "C": "L·ªói", "D": "'abc'"},
            "dap_an": "A",
            "giai_thich": "So s√°nh chu·ªói theo th·ª© t·ª± alphabet"
        },
        {
            "id": 17,
            "phan": "N√¢ng cao",
            "noi_dung": "C√°ch n√†o hi·ªáu qu·∫£ nh·∫•t ƒë·ªÉ ki·ªÉm tra x trong nhi·ªÅu gi√° tr·ªã?",
            "lua_chon": {"A": "if x == 1 or x == 2 or x == 3:", "B": "if x in [1, 2, 3]:", "C": "if x in {1, 2, 3}:", "D": "B v√† C ƒë·ªÅu t·ªët"},
            "dap_an": "C",
            "giai_thich": "Set {1,2,3} nhanh h∆°n list [1,2,3] cho lookup"
        },
        {
            "id": 18,
            "phan": "N√¢ng cao",
            "noi_dung": "K·∫øt qu·∫£ c·ªßa: True + True",
            "lua_chon": {"A": "2", "B": "True", "C": "False", "D": "L·ªói"},
            "dap_an": "A",
            "giai_thich": "True = 1 trong ph√©p to√°n, 1 + 1 = 2"
        },
        {
            "id": 19,
            "phan": "N√¢ng cao",
            "noi_dung": "ƒêo·∫°n code n√†o ki·ªÉm tra s l√† chu·ªói r·ªóng?",
            "lua_chon": {"A": "if s == '':", "B": "if not s:", "C": "if len(s) == 0:", "D": "T·∫•t c·∫£ ƒë·ªÅu ƒë√∫ng"},
            "dap_an": "D",
            "giai_thich": "C·∫£ 3 c√°ch ƒë·ªÅu ki·ªÉm tra chu·ªói r·ªóng"
        },
        {
            "id": 20,
            "phan": "N√¢ng cao",
            "noi_dung": "Short-circuit evaluation nghƒ©a l√† g√¨?",
            "lua_chon": {"A": "T√≠nh to√°n nhanh", "B": "D·ª´ng s·ªõm khi ƒë√£ bi·∫øt k·∫øt qu·∫£", "C": "T·ªëi ∆∞u h√≥a code", "D": "Ki·ªÉm tra l·ªói"},
            "dap_an": "B",
            "giai_thich": "and/or d·ª´ng s·ªõm khi ƒë√£ x√°c ƒë·ªãnh ƒë∆∞·ª£c k·∫øt qu·∫£"
        }
    ]
    
    return cau_hoi

# ===============================================
# CH·ª®C NƒÇNG QUIZ T∆Ø∆†NG T√ÅC
# ===============================================

def hien_thi_cau_hoi(cau_hoi, so_thu_tu, tong_so):
    """Hi·ªÉn th·ªã m·ªôt c√¢u h·ªèi v·ªõi format ƒë·∫πp"""
    
    if COLORAMA_AVAILABLE:
        print(Fore.BLUE + f"{'='*60}")
        print(Fore.YELLOW + f"üìù C√ÇU H·ªéI {so_thu_tu}/{tong_so} - PH·∫¶N {cau_hoi['phan'].upper()}")
        print(Fore.BLUE + f"{'='*60}" + Style.RESET_ALL)
    else:
        print("="*60)
        print(f"CAU HOI {so_thu_tu}/{tong_so} - PHAN {cau_hoi['phan'].upper()}")
        print("="*60)
    
    print()
    print(f"‚ùì {cau_hoi['noi_dung']}")
    print()
    
    # Hi·ªÉn th·ªã c√°c l·ª±a ch·ªçn
    for key, value in cau_hoi['lua_chon'].items():
        if COLORAMA_AVAILABLE:
            print(Fore.WHITE + f"   {key}. {value}" + Style.RESET_ALL)
        else:
            print(f"   {key}. {value}")
    
    print()

def nhap_dap_an():
    """Nh·∫≠p ƒë√°p √°n t·ª´ ng∆∞·ªùi d√πng v·ªõi validation"""
    
    while True:
        if COLORAMA_AVAILABLE:
            dap_an = input(Fore.GREEN + "üéØ Nh·∫≠p ƒë√°p √°n c·ªßa b·∫°n (A/B/C/D): " + Style.RESET_ALL).strip().upper()
        else:
            dap_an = input("Nhap dap an cua ban (A/B/C/D): ").strip().upper()
        
        if dap_an in ['A', 'B', 'C', 'D']:
            return dap_an
        else:
            if COLORAMA_AVAILABLE:
                print(Fore.RED + "‚ùå Vui l√≤ng nh·∫≠p A, B, C ho·∫∑c D!" + Style.RESET_ALL)
            else:
                print("Vui long nhap A, B, C hoac D!")

def choi_quiz_trac_nghiem():
    """Ch·ª©c nƒÉng ch√≠nh ch∆°i quiz tr·∫Øc nghi·ªám"""
    
    quiz = QuizManager()
    quiz.hien_thi_header()
    
    # H·ªèi ng∆∞·ªùi d√πng c√≥ mu·ªën ch∆°i kh√¥ng
    if COLORAMA_AVAILABLE:
        bat_dau = input(Fore.CYAN + "üöÄ B·∫°n c√≥ s·∫µn s√†ng b·∫Øt ƒë·∫ßu quiz kh√¥ng? (y/n): " + Style.RESET_ALL).lower()
    else:
        bat_dau = input("Ban co san sang bat dau quiz khong? (y/n): ").lower()
    
    if bat_dau != 'y':
        print("üëã H·∫πn g·∫∑p l·∫°i! Ch√∫c b·∫°n h·ªçc t·ªët!")
        return
    
    # L·∫•y danh s√°ch c√¢u h·ªèi
    danh_sach_cau_hoi = tao_danh_sach_cau_hoi()
    
    # H·ªèi s·ªë l∆∞·ª£ng c√¢u mu·ªën l√†m
    print("\nüìä Ch·ªçn s·ªë l∆∞·ª£ng c√¢u h·ªèi:")
    print("1. L√†m 10 c√¢u (Quick test)")
    print("2. L√†m 20 c√¢u (Full test)")  
    print("3. L√†m t·∫•t c·∫£ c√¢u (Complete)")
    
    while True:
        try:
            lua_chon = int(input("üéØ Ch·ªçn mode (1/2/3): "))
            if lua_chon == 1:
                so_cau = 10
                break
            elif lua_chon == 2:
                so_cau = 20
                break
            elif lua_chon == 3:
                so_cau = len(danh_sach_cau_hoi)
                break
            else:
                print("‚ùå Vui l√≤ng ch·ªçn 1, 2 ho·∫∑c 3!")
        except ValueError:
            print("‚ùå Vui l√≤ng nh·∫≠p s·ªë!")
    
    # Random ho·∫∑c theo th·ª© t·ª±
    if COLORAMA_AVAILABLE:
        random_order = input(Fore.MAGENTA + "üé≤ B·∫°n c√≥ mu·ªën random c√¢u h·ªèi kh√¥ng? (y/n): " + Style.RESET_ALL).lower()
    else:
        random_order = input("Ban co muon random cau hoi khong? (y/n): ").lower()
    
    if random_order == 'y':
        cau_hoi_chon = random.sample(danh_sach_cau_hoi, min(so_cau, len(danh_sach_cau_hoi)))
    else:
        cau_hoi_chon = danh_sach_cau_hoi[:so_cau]
    
    print(f"\nüéÆ B·∫Øt ƒë·∫ßu quiz v·ªõi {len(cau_hoi_chon)} c√¢u h·ªèi!")
    time.sleep(2)
    
    # B·∫Øt ƒë·∫ßu quiz
    for i, cau_hoi in enumerate(cau_hoi_chon, 1):
        # Clear screen effect
        print("\n" * 2)
        
        # Hi·ªÉn th·ªã ti·∫øn ƒë·ªô
        quiz.hien_thi_tien_do()
        
        # Hi·ªÉn th·ªã c√¢u h·ªèi
        hien_thi_cau_hoi(cau_hoi, i, len(cau_hoi_chon))
        
        # Nh·∫≠p ƒë√°p √°n
        dap_an_user = nhap_dap_an()
        
        # Ki·ªÉm tra ƒë√°p √°n
        quiz.kiem_tra_dap_an(dap_an_user, cau_hoi['dap_an'], cau_hoi['giai_thich'])
        
        # Pause gi·ªØa c√°c c√¢u (tr·ª´ c√¢u cu·ªëi)
        if i < len(cau_hoi_chon):
            if COLORAMA_AVAILABLE:
                input(Fore.CYAN + "üëÜ Nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c..." + Style.RESET_ALL)
            else:
                input("Nhan Enter de tiep tuc...")
    
    # Hi·ªÉn th·ªã k·∫øt qu·∫£ cu·ªëi
    quiz.hien_thi_ket_qua_cuoi()
    
    # H·ªèi c√≥ mu·ªën l√†m l·∫°i
    if COLORAMA_AVAILABLE:
        lam_lai = input(Fore.YELLOW + "\nüîÑ B·∫°n c√≥ mu·ªën l√†m quiz kh√°c kh√¥ng? (y/n): " + Style.RESET_ALL).lower()
    else:
        lam_lai = input("\nBan co muon lam quiz khac khong? (y/n): ").lower()
    
    if lam_lai == 'y':
        choi_quiz_trac_nghiem()

# ===============================================
# B√ÄI T·∫¨P T·ª∞ LU·∫¨N T∆Ø∆†NG T√ÅC
# ===============================================

def tao_bai_tap_tu_luan():
    """T·∫°o danh s√°ch b√†i t·∫≠p t·ª± lu·∫≠n"""
    
    bai_tap = [
        {
            "id": 1,
            "tieu_de": "Ph√¢n lo·∫°i h·ªçc sinh",
            "mo_ta": "Vi·∫øt ch∆∞∆°ng tr√¨nh nh·∫≠p ƒëi·ªÉm 3 m√¥n, ph√¢n lo·∫°i h·ªçc sinh",
            "yeu_cau": [
                "Nh·∫≠p v√† validate ƒëi·ªÉm (0-10)",
                "T√≠nh ƒëi·ªÉm trung b√¨nh", 
                "Ph√¢n lo·∫°i: Gi·ªèi/Kh√°/TB/Y·∫øu",
                "ƒê∆∞a ra l·ªùi khuy√™n"
            ],
            "goi_y": "D√πng nested if ƒë·ªÉ ki·ªÉm tra ƒëi·ªÅu ki·ªán ph·ª©c t·∫°p"
        },
        {
            "id": 2,
            "tieu_de": "M√°y t√≠nh thu·∫ø thu nh·∫≠p",
            "mo_ta": "T√≠nh thu·∫ø thu nh·∫≠p c√° nh√¢n theo b·∫≠c thu·∫ø l≈©y ti·∫øn",
            "yeu_cau": [
                "Nh·∫≠p thu nh·∫≠p nƒÉm",
                "T√≠nh theo b·∫≠c thu·∫ø VN",
                "Hi·ªÉn th·ªã thu·∫ø ph·∫£i n·ªôp",
                "Thu nh·∫≠p sau thu·∫ø"
            ],
            "goi_y": "S·ª≠ d·ª•ng elif chain cho c√°c b·∫≠c thu·∫ø"
        },
        {
            "id": 3,
            "tieu_de": "Game ƒëo√°n s·ªë n√¢ng cao", 
            "mo_ta": "T·∫°o game ƒëo√°n s·ªë v·ªõi nhi·ªÅu t√≠nh nƒÉng",
            "yeu_cau": [
                "Random s·ªë t·ª´ 1-100",
                "Gi·ªõi h·∫°n s·ªë l·∫ßn ƒëo√°n",
                "G·ª£i √Ω th√¥ng minh",
                "X·ª≠ l√Ω input l·ªói"
            ],
            "goi_y": "D√πng while loop k·∫øt h·ª£p if/else"
        }
    ]
    
    return bai_tap

def hien_thi_bai_tap_tu_luan():
    """Hi·ªÉn th·ªã menu b√†i t·∫≠p t·ª± lu·∫≠n"""
    
    if COLORAMA_AVAILABLE:
        print(Fore.CYAN + "=" * 60)
        print(Fore.YELLOW + "üìù B√ÄI T·∫¨P T·ª∞ LU·∫¨N")
        print(Fore.CYAN + "=" * 60 + Style.RESET_ALL)
    else:
        print("=" * 60)
        print("BAI TAP TU LUAN")
        print("=" * 60)
    
    bai_tap = tao_bai_tap_tu_luan()
    
    for bai in bai_tap:
        if COLORAMA_AVAILABLE:
            print(Fore.YELLOW + f"\nüéØ B√†i {bai['id']}: {bai['tieu_de']}" + Style.RESET_ALL)
        else:
            print(f"\nBai {bai['id']}: {bai['tieu_de']}")
        
        print(f"üìñ M√¥ t·∫£: {bai['mo_ta']}")
        print("üìã Y√™u c·∫ßu:")
        for yc in bai['yeu_cau']:
            print(f"   ‚Ä¢ {yc}")
        
        if COLORAMA_AVAILABLE:
            print(Fore.GREEN + f"üí° G·ª£i √Ω: {bai['goi_y']}" + Style.RESET_ALL)
        else:
            print(f"Goi y: {bai['goi_y']}")
    
    print(f"\n{Fore.MAGENTA if COLORAMA_AVAILABLE else ''}üìö H√£y ch·ªçn 1-2 b√†i ƒë·ªÉ th·ª±c h√†nh!{Style.RESET_ALL if COLORAMA_AVAILABLE else ''}")
    print("üéØ T·∫≠p trung v√†o logic if/else v√† x·ª≠ l√Ω input")

# ===============================================
# MENU CH√çNH
# ===============================================

def hien_thi_menu_chinh():
    """Hi·ªÉn th·ªã menu ch√≠nh c·ªßa ·ª©ng d·ª•ng"""
    
    if COLORAMA_AVAILABLE:
        print(Fore.CYAN + "=" * 60)
        print(Fore.YELLOW + "üéÆ H·ªÜ TH·ªêNG QUIZ IF/ELSE T∆Ø∆†NG T√ÅC üéÆ")
        print(Fore.CYAN + "=" * 60 + Style.RESET_ALL)
    else:
        print("=" * 60)
        print("HE THONG QUIZ IF/ELSE TUONG TAC")
        print("=" * 60)
    
    print("\nüìö Ch·ªçn ch·∫ø ƒë·ªô h·ªçc t·∫≠p:")
    print("1. üéØ Quiz tr·∫Øc nghi·ªám t∆∞∆°ng t√°c")
    print("2. üìù Xem b√†i t·∫≠p t·ª± lu·∫≠n")
    print("3. üìñ H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng")
    print("4. üö™ Tho√°t")
    print()

def hien_thi_huong_dan():
    """Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng"""
    
    if COLORAMA_AVAILABLE:
        print(Fore.CYAN + "=" * 60)
        print(Fore.YELLOW + "üìñ H∆Ø·ªöNG D·∫™N S·ª¨ D·ª§NG")
        print(Fore.CYAN + "=" * 60 + Style.RESET_ALL)
    else:
        print("=" * 60)
        print("HUONG DAN SU DUNG")
        print("=" * 60)
    
    print("""
üéØ QUIZ TR·∫ÆC NGHI·ªÜM:
   ‚Ä¢ 20 c√¢u h·ªèi t·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao
   ‚Ä¢ T∆∞∆°ng t√°c t·ª´ng c√¢u v·ªõi feedback ngay l·∫≠p t·ª©c
   ‚Ä¢ Ch·ªçn s·ªë l∆∞·ª£ng c√¢u v√† th·ª© t·ª± random
   ‚Ä¢ Xem k·∫øt qu·∫£ chi ti·∫øt v√† x·∫øp lo·∫°i
   
üìù B√ÄI T·∫¨P T·ª∞ LU·∫¨N:
   ‚Ä¢ 3 b√†i t·∫≠p th·ª±c h√†nh coding
   ‚Ä¢ Y√™u c·∫ßu chi ti·∫øt v√† g·ª£i √Ω
   ‚Ä¢ T·∫≠p trung v√†o if/else logic
   
üåà T√çNH NƒÇNG:
   ‚Ä¢ Colorama cho tr·∫£i nghi·ªám ƒë·∫πp m·∫Øt
   ‚Ä¢ Validation input ƒë·∫ßy ƒë·ªß
   ‚Ä¢ Tracking ƒëi·ªÉm s·ªë real-time
   ‚Ä¢ Tips v√† nh·∫≠n x√©t c√° nh√¢n h√≥a
   
üí° L·ªúI KHUY√äN:
   ‚Ä¢ ƒê·ªçc k·ªπ ƒë·ªÅ b√†i tr∆∞·ªõc khi tr·∫£ l·ªùi
   ‚Ä¢ Suy nghƒ© t·ª´ng b∆∞·ªõc logic
   ‚Ä¢ Kh√¥ng ng·∫°i l√†m l·∫°i ƒë·ªÉ c·∫£i thi·ªán
   ‚Ä¢ Practice coding th∆∞·ªùng xuy√™n
    """)
    
    if COLORAMA_AVAILABLE:
        input(Fore.CYAN + "\nüëÜ Nh·∫•n Enter ƒë·ªÉ quay l·∫°i menu..." + Style.RESET_ALL)
    else:
        input("\nNhan Enter de quay lai menu...")

def main():
    """H√†m ch√≠nh ƒëi·ªÅu khi·ªÉn ·ª©ng d·ª•ng"""
    
    # Ki·ªÉm tra colorama
    if not COLORAMA_AVAILABLE:
        print("‚ö†Ô∏è  Colorama ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t. Ch·∫°y: pip install colorama")
        print("·ª®ng d·ª•ng s·∫Ω ch·∫°y ·ªü ch·∫ø ƒë·ªô text th∆∞·ªùng.\n")
    
    while True:
        # Clear screen effect
        print("\n" * 2)
        
        hien_thi_menu_chinh()
        
        try:
            lua_chon = int(input("üéØ Ch·ªçn ch·ª©c nƒÉng (1-4): "))
            
            if lua_chon == 1:
                choi_quiz_trac_nghiem()
            elif lua_chon == 2:
                hien_thi_bai_tap_tu_luan()
                input("\nNh·∫•n Enter ƒë·ªÉ quay l·∫°i...")
            elif lua_chon == 3:
                hien_thi_huong_dan()
            elif lua_chon == 4:
                if COLORAMA_AVAILABLE:
                    print(Fore.GREEN + "üëã C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng! Ch√∫c b·∫°n h·ªçc t·ªët!" + Style.RESET_ALL)
                else:
                    print("Cam on ban da su dung! Chuc ban hoc tot!")
                break
            else:
                if COLORAMA_AVAILABLE:
                    print(Fore.RED + "‚ùå Vui l√≤ng ch·ªçn t·ª´ 1 ƒë·∫øn 4!" + Style.RESET_ALL)
                else:
                    print("Vui long chon tu 1 den 4!")
                time.sleep(1)
                
        except ValueError:
            if COLORAMA_AVAILABLE:
                print(Fore.RED + "‚ùå Vui l√≤ng nh·∫≠p s·ªë!" + Style.RESET_ALL)
            else:
                print("Vui long nhap so!")
            time.sleep(1)
        except KeyboardInterrupt:
            if COLORAMA_AVAILABLE:
                print(Fore.YELLOW + "\n\nüëã T·∫°m bi·ªát! H·∫πn g·∫∑p l·∫°i!" + Style.RESET_ALL)
            else:
                print("\n\nTam biet! Hen gap lai!")
            break

# ===============================================
# CH·∫†Y CH∆Ø∆†NG TR√åNH
# ===============================================

if __name__ == "__main__":
    main() 